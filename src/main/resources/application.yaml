# ========================= 应用基本配置 =========================
spring:
  application:
    name: ITEams  # 应用名称，将用于服务发现和日志中标识应用
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}  # 激活的配置环境，如未指定则默认使用dev环境

  # ======================= 数据库连接配置 =======================
  datasource:
    url: jdbc:mysql://localhost:3306/iteams_db?useSSL=false&serverTimezone=UTC&characterEncoding=utf8  # 数据库连接URL，包含数据库名iteams_db和连接参数
    username: root  # 数据库用户名
    password: h3c.com123  # 数据库密码，生产环境应使用加密方式或环境变量
    driver-class-name: com.mysql.cj.jdbc.Driver  # MySQL数据库驱动类名
    # Hikari连接池配置 - 高性能JDBC连接池
    hikari:
      connection-timeout: 20000  # 连接超时时间，单位毫秒
      minimum-idle: 5  # 最小空闲连接数
      maximum-pool-size: 20  # 最大连接池大小，根据系统并发量调整
      idle-timeout: 300000  # 空闲连接存活最大时间，单位毫秒
      max-lifetime: 1200000  # 连接最长生命周期，单位毫秒

  # ======================= JPA/Hibernate配置 =======================
  jpa:
    hibernate:
      ddl-auto: update  # 数据库模式验证模式：validate-验证实体与数据库表结构，不修改表
    properties:
      hibernate:
        format_sql: true  # 格式化SQL输出，便于调试
        dialect: org.hibernate.dialect.MySQLDialect  # 指定Hibernate使用的MySQL方言
    show-sql: true  # 显示执行的SQL语句，生产环境建议关闭

  # ======================= 文件上传配置 =======================
  servlet:
    multipart:
      max-file-size: 10MB  # 单个文件上传最大大小限制
      max-request-size: 15MB  # 单次请求最大上传数据总量

  # ======================= 缓存配置 =======================
  cache:
    type: caffeine  # 使用Caffeine作为本地缓存实现
    caffeine:
      spec: maximumSize=1000,expireAfterAccess=3600s  # 缓存最大容量1000条，最后访问后3600秒过期

  # ======================= 国际化配置 =======================
  messages:
    basename: i18n/messages  # 国际化资源文件基础名
    encoding: UTF-8  # 国际化资源文件编码
    fallback-to-system-locale: false  # 如果没有找到特定语言的资源文件，不使用系统语言，而是使用默认资源文件

# ========================= 服务器配置 =========================
server:
  port: 8080  # 应用运行端口号
  servlet:
    context-path: /api  # 应用统一访问路径前缀

# ========================= 日志配置 =========================
logging:
  level:
    root: info  # 全局日志级别
    org.springframework.web: warn  # Spring Web组件日志级别
    io.nssa.iteams: debug  # 项目自身代码包的日志级别，开发环境建议debug
  file:
    name: logs/app.log  # 日志文件保存路径
    max-size: 50MB  # 单个日志文件最大大小
    max-history: 7  # 日志文件保留天数
  pattern:
    # 控制台日志输出格式，包含颜色、时间、日志级别、进程ID、线程、日志源和消息
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    # 日志文件中的日志格式
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

# ========================= Spring Boot Actuator监控端点配置 =========================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus  # 暴露的监控端点，用于系统监控
  endpoint:
    health:
      show-details: when_authorized  # 健康检查详情仅对已授权用户显示
